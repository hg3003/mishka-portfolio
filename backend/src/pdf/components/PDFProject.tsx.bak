import React from 'react';
import { View, Text, Image, StyleSheet } from '@react-pdf/renderer';

export interface PDFImage {
  path: string;
  caption?: string | null;
}

export interface PDFProjectData {
  name: string;
  type?: string | null;
  year?: number | null;
  brief?: string | null;
  hero?: PDFImage | null;
  images: PDFImage[];
}

const styles = StyleSheet.create({
  section: { padding: 24, gap: 8 },
  title: { fontSize: 14, fontWeight: 700 },
  meta: { fontSize: 10, color: '#444' },
  body: { fontSize: 10, lineHeight: 1.4 },
  hero: { width: '100%', height: 320, objectFit: 'cover' },
  grid: { display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 8 },
  gridImg: { width: '48%', height: 160, objectFit: 'cover' },
  cap: { fontSize: 8, color: '#666' },
});

export const PDFProject: React.FC<{ project: PDFProjectData }> = ({ project }) => {
  return (
    <View style={styles.section}>
      <Text style={styles.title}>{project.name}</Text>
      <Text style={styles.meta}>
        {(project.year ?? '—')} · {(project.type ?? '—')}
      </Text>
      {project.hero?.path ? (
        <>
          <Image style={styles.hero} src={project.hero.path} />
          {project.hero.caption ? <Text style={styles.cap}>{project.hero.caption}</Text> : null}
        </>
      ) : null}
      {project.brief ? <Text style={styles.body}>{project.brief}</Text> : null}
      {project.images.length > 0 ? (
        <View style={styles.grid}>
          {project.images.map((img, i) => (
            <View key={`${img.path}-${i}`} style={{ width: '48%' }}>
              <Image style={styles.gridImg} src={img.path} />
              {img.caption ? <Text style={styles.cap}>{img.caption}</Text> : null}
            </View>
          ))}
        </View>
      ) : null}
    </View>
  );
};